@* @model IEnumerable<Delf_WebApp.Models.Pedido> *@

@* //Se cambia la referencia del model para poder usar el paginador *@
@model Paginador<Delf_WebApp.Models.Pedido>
@{
    ViewData["Title"] = "Pedidos";
}

<h1 class="mb-4">Pedidos</h1>

<!-- Formulario de búsqueda -->
<form method="get" id="filter-form" class="mb-4">
    <div class="row">
        <div class="col-md-8">
            <input type="text" name="searchString" class="form-control" placeholder="Buscar pedido..." value="@ViewData["searchString"]" />
        </div>
        <div class="col-md-4">
            <button type="submit" class="btn btn-primary">Buscar</button>
        </div>
    </div>
</form>

<div class="mb-3">
    <a asp-action="Create" class="btn btn-success">Cargar nuevo pedido</a>
</div>

<hr />
@if (!Model.Elementos.Any())
{
    <div class="alert alert-warning" role="alert">
        No se encontraron resultados para tu búsqueda.
    </div>
}
else
{
    <table class="table table-striped table-bordered">
        <thead class="table-light">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Elementos.First().Numero)</th>
                <th>@Html.DisplayNameFor(model => model.Elementos.First().Fecha)</th>
                <th>@Html.DisplayNameFor(model => model.Elementos.First().ClienteId)</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Elementos)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Numero)</td>
                    <td>@Html.DisplayFor(modelItem => item.Fecha)</td>
                    <td>@Html.DisplayFor(modelItem => item.Cliente!.Nombre) @Html.DisplayFor(modelItem => item.Cliente!.Apellido)</td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Detalle</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="mt-3">
    @if (Model.HayPaginaAnterior)
    {
        <a asp-action="Index" asp-route-pagina="@(Model.PaginaActual - 1)" asp-route-searchString="@ViewData["searchString"]" class="btn btn-secondary btn-sm">Anterior</a>
    }

    Página @Model.PaginaActual de @Model.TotalPaginas

    @if (Model.HayPaginaSiguiente)
    {
        <a asp-action="Index" asp-route-pagina="@(Model.PaginaActual + 1)" asp-route-searchString="@ViewData["searchString"]" class="btn btn-secondary btn-sm">Siguiente</a>
    }
</div>

