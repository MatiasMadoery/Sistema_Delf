@* Se modifica el model para utilizar el paginador *@
@* @model IEnumerable<Delf_WebApp.Models.Articulo> *@
@model Paginador<Delf_WebApp.Models.Articulo>

@{
    ViewData["Title"] = "Index";
}

<h1 class="mb-4">Artículos</h1>

<!-- Formulario de búsqueda -->
<form method="get" id="filter-form" class="mb-4">
    <div class="row">
        <div class="col-8 col-sm-8 col-md-4">
            <input type="text" name="searchString" class="form-control" placeholder="Buscar artículos..." value="@ViewData["searchString"]" />
        </div>
        <div class="col-1 col-md-4">
            <button type="submit" class="btn btn-primary">Buscar</button>
        </div>
    </div>
    <br />
    <div class="row mt-2">
        <div class="col-8 col-md-4">
            <label for="categoriaId" class="mr-2">Filtrar por categoría:</label>
            <select id="categoriaId" name="categoriaId" class="form-control" asp-items="ViewBag.CategoriaId" onchange="document.getElementById('filter-form').submit();">
                <option value="">Todas</option>
                @if (ViewData["categoriaId"] != null)
                {
                    <option selected="selected" value="@ViewData["categoriaId"]">@ViewBag.CategoriaNombre</option>
                }
            </select>
        </div>
    </div>
</form>

<div class="mb-3">
    <a asp-action="Create" class="btn btn-success">Cargar nuevo artículo</a>
</div>
<hr />
@if (!Model.Elementos.Any())
{
    <div class="alert alert-warning" role="alert">
        No se encontraron resultados para tu búsqueda.
    </div>
}
else
{
    <table class="table table-striped table-bordered">
        <thead class="table-light">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Elementos.First().Codigo)</th>
                <th>@Html.DisplayNameFor(model => model.Elementos.First().Descripcion)</th>
                <th>@Html.DisplayNameFor(model => model.Elementos.First().Precio)</th>
                <th>@Html.DisplayNameFor(model => model.Elementos.First().Categoria)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Elementos)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Codigo)</td>
                    <td>@Html.DisplayFor(modelItem => item.Descripcion)</td>
                    <td>@Html.DisplayFor(modelItem => item.Precio)</td>
                    <td>@Html.DisplayFor(modelItem => item.Categoria!.Nombre)</td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Detalle</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="mt-3">
    @if (Model.HayPaginaAnterior)
    {
        <a asp-action="Index" asp-route-pagina="@(Model.PaginaActual - 1)" asp-route-searchString="@ViewData["searchString"]" asp-route-categoriaId="@ViewData["categoriaId"]" class="btn btn-secondary btn-sm">Anterior</a>
    }

    Página @Model.PaginaActual de @Model.TotalPaginas

    @if (Model.HayPaginaSiguiente)
    {
        <a asp-action="Index" asp-route-pagina="@(Model.PaginaActual + 1)" asp-route-searchString="@ViewData["searchString"]" asp-route-categoriaId="@ViewData["categoriaId"]" class="btn btn-secondary btn-sm">Siguiente</a>
    }
</div>

@section Scripts {
    <script>
        document.getElementById('categoriaId').addEventListener('change', function () {
            document.getElementById('filter-form').submit();
        });
    </script>
}